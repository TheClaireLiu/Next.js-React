import classes from './NewPost.module.css';

import { Link, Form, redirect} from 'react-router-dom';
import Modal from "../components/Modal.jsx";

// eslint-disable-next-line react/prop-types
function NewPost() {

  // function submitHandler(event){
  //   event.preventDefault();//阻止submit按钮被点击时，浏览器默认生成和发送http请求，
  //   const postData = {
  //     body: enteredBody,
  //     author: enteredAuthor
  //   };


  return (
    <Modal>
      <Form method='post' className={classes.form} >
        <p>
          <label htmlFor="body">Text</label>
          {/*props.onBodyChange作为一个值被接收到onChange prop，*/}
          {/* eslint-disable-next-line react/prop-types */}
          <textarea id="body" name="body" required rows={3} />
        </p>
        {/*<p>{enteredBody}</p>*/}
        <p>
          <label htmlFor="name">Your name</label>
          {/* eslint-disable-next-line react/prop-types */}
          <input type="text" id="name" name="author" required />
        </p>

        <p className={classes.actions}>
          <Link to="/" type="button">Cancel</Link>
          <button >Submit</button>
        </p>
      </Form>
    </Modal>
  );
}

export default NewPost;
//  data 是一个对象，是react router自动生成的，包括data.request
export async function action({request}){
  const formData = await request.formData();//执行formData method之后，可以访问表单中的数据。实际上formData产生了一个promise
  // formData.get('body');//获取body字段提供的值
  const postData = Object.fromEntries(formData); //{body: '...',author: '...' }

  await fetch('http://localhost:8080/posts',
    // pass an object as a second argument to fetch to set the method,
    // to post to return this into a post request
    {
      method: 'POST',
      body: JSON.stringify(postData),//data format is JSON
      headers:{
        'Content-Type': 'application/json'
      }
    });

  //redirect 重定向做的是它生成一个响应对象，由这个action返回
  // 如果返回一个response object，React Router will look into that object,
  // if it's a redirect response,which is the kind of response that is generated by calling redirect,
  // React Router will simply move to that different route to which you are trying to redirect.

  return redirect('/');
}